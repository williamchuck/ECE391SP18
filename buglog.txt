Bug log
Group 19: Caffeine_Theanine

2018/03/10
********************************************************************
Issue: Triple Fault occurs when paging is enabled
Cause: The order of moving values into CR3, CR4, and CR0 registers
	   is wrong
Fix:   Use the correct order (CR3 -> CR4 -> CR0)
********************************************************************

********************************************************************
Issue: System crashes after interrupts on slave PIC are serviced
Cause: send_eoi didn't send eoi signal to master PIC after sending
	   eoi signal to slave PIC
Fix:   Modify send_eoi function to send eoi signal to master PIC
	   when dealing with the slave interrupts
********************************************************************

********************************************************************
Issue: Interrupt handler crashes on exit
Cause: Not all registers are saved / leave is used in the interrupt
	   handlers
Fix:   Use pushal and popal in all the interrupt handlers
********************************************************************

2018/03/22
********************************************************************
Issue: Data is lost when a large data file is being read
Cause: When read operation exceeds one data bock, it doesn't go to
	   the next data block
Fix:   When read operation reaches the end of a data block, jump
       to the next data block
********************************************************************

********************************************************************
Issue: The first keypress at a new line can't be stored into the
	   text buffer
Cause: The tracking and handling of the buffer index are functioned
 	   improperly when the enter key is pressed
Fix:   Add a check of dealing with enter key press in the interrupt
	   handler
********************************************************************

2018/03/26
********************************************************************
Issue: Uncompleted commands can be executed
Cause: String Compare function only compares the content
Fix:   Compare the lengths of two strings before comparing their
	   contents to avoid uncompleted commands
********************************************************************

********************************************************************
Issue: verylargetextwithverylongname.txt can be opened with the
	   exact name (the filename is too long to be read completely)
Cause: Comparison of filename doesn't check if the filename exceeds
	   32-byte constraint
Fix:   Check if the input filename exceeds 32-byte constraint
********************************************************************

********************************************************************
Issue: The cursor displays at wrong position of a new line
Cause: The cursor wasn't updated properly on the screen
Fix:   Update the cursor's position after every putc
********************************************************************

2018/04/16
********************************************************************
Issue: A new shell is unable to restart when the last shell is
	   exited (the same shell is exited twice)
Cause: When the system tries to restart a new shell, pid is not at
	   0, so when the shell exits again, kernel doesn't realize it
	   as the last running user program.
Fix:   Put ESP on the kernel stack (where the pid0 is) so the shell
	   will be restarted when the last shell is exited
********************************************************************

********************************************************************
Issue: The terminal still echoes character after the text  buffer
	   is full
Cause: No relevant check in the keyboard interrupt handler
Fix:   Check if the text buffer is full in the keyboard interrupt
	   handler. (If full, then no more characters echoed on screen)
********************************************************************

********************************************************************
Issue: When user programming is running, Ctrl + L doesn't clear screen
Cause: ece391_read has associated flag blocking Ctrl + L handler
Fix:   Raise the priority of Ctrl + L in the interrupt handler.
********************************************************************

2018/04/29
********************************************************************
Issue: Display is skewed when the scheduling is on
Cause: putc and scrolling uses video memory for the current terminal,
	   but the video memory should no longer be in use
Fix:   Use virtual memory for scrolling and putc (remap if needed)
********************************************************************

********************************************************************
Issue: Program terminates abnormally in the middle of executing
Cause: Shell is scheduled when the child process is running
Fix:   Disable shell from being scheduled when a child process is
	   running
********************************************************************

********************************************************************
Issue: User program is unable to manipulate video memory by vidmap
Cause: Video memory is not initialized properly
Fix:   Clear video memory when a new shell is started on the terminal
********************************************************************

********************************************************************
Issue: Cursor doesn't show on other terminals
Cause: Video memory is not initialized properly
Fix:   Clear video memory when a new shell is started on the terminal
********************************************************************

********************************************************************
Issue: Passing syserr number 6: err_vidmap with kernel is failed
Cause: vidmap doesn't check if the required page is at kernel level
Fix:   Implement a kernel page check in vidmap
********************************************************************

********************************************************************
Issue: User programs are running slow (i.e. fish, pingpong) when
	   there are multiple user programs running in the background
Cause: PIC switches between processes, but the RTC interrupts occurred
       in one of the processes don't affect other processes
	   (i.e. the RTC timer at background doesn't sync with others)
Fix:   Use another counter to reflect each process's RTC time for
	   rtc_read. Counters for all processes will be updated when a
	   RTC interrupt occurs
********************************************************************
